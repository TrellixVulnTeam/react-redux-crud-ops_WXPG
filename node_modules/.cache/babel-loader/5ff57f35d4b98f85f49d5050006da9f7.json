{"ast":null,"code":"import { VISIBILITY_FILTERS } from \"../constants\";\nexport const getTodosState = store => store.todos;\nexport const getTodoList = store => getTodosState(store) ? getTodosState(store).allIds : [];\nexport const getTodoById = (store, id) => getTodosState(store) ? { ...getTodosState(store).byIds[id],\n  id\n} : {};\n/**\n * example of a slightly more complex selector\n * select from store combining information from multiple reducers\n */\n\nexport const getTodos = store => getTodoList(store).map(id => getTodoById(store, id));\nexport const getTodosByVisibilityFilter = (store, visibilityFilter) => {\n  const allTodos = getTodos(store);\n\n  switch (visibilityFilter) {\n    case VISIBILITY_FILTERS.COMPLETED:\n      return allTodos.filter(todo => todo.completed);\n\n    case VISIBILITY_FILTERS.INCOMPLETE:\n      return allTodos.filter(todo => !todo.completed);\n\n    case VISIBILITY_FILTERS.ALL:\n    default:\n      return allTodos;\n  }\n};","map":{"version":3,"sources":["/Users/sandeep/workspace/test/my-app/src/redux/selectors.js"],"names":["VISIBILITY_FILTERS","getTodosState","store","todos","getTodoList","allIds","getTodoById","id","byIds","getTodos","map","getTodosByVisibilityFilter","visibilityFilter","allTodos","COMPLETED","filter","todo","completed","INCOMPLETE","ALL"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,cAAnC;AAEA,OAAO,MAAMC,aAAa,GAAGC,KAAK,IAAIA,KAAK,CAACC,KAArC;AAEP,OAAO,MAAMC,WAAW,GAAGF,KAAK,IAC9BD,aAAa,CAACC,KAAD,CAAb,GAAuBD,aAAa,CAACC,KAAD,CAAb,CAAqBG,MAA5C,GAAqD,EADhD;AAGP,OAAO,MAAMC,WAAW,GAAG,CAACJ,KAAD,EAAQK,EAAR,KACzBN,aAAa,CAACC,KAAD,CAAb,GAAuB,EAAE,GAAGD,aAAa,CAACC,KAAD,CAAb,CAAqBM,KAArB,CAA2BD,EAA3B,CAAL;AAAqCA,EAAAA;AAArC,CAAvB,GAAmE,EAD9D;AAGP;AACA;AACA;AACA;;AACA,OAAO,MAAME,QAAQ,GAAGP,KAAK,IAC3BE,WAAW,CAACF,KAAD,CAAX,CAAmBQ,GAAnB,CAAuBH,EAAE,IAAID,WAAW,CAACJ,KAAD,EAAQK,EAAR,CAAxC,CADK;AAGP,OAAO,MAAMI,0BAA0B,GAAG,CAACT,KAAD,EAAQU,gBAAR,KAA6B;AACrE,QAAMC,QAAQ,GAAGJ,QAAQ,CAACP,KAAD,CAAzB;;AACA,UAAQU,gBAAR;AACE,SAAKZ,kBAAkB,CAACc,SAAxB;AACE,aAAOD,QAAQ,CAACE,MAAT,CAAgBC,IAAI,IAAIA,IAAI,CAACC,SAA7B,CAAP;;AACF,SAAKjB,kBAAkB,CAACkB,UAAxB;AACE,aAAOL,QAAQ,CAACE,MAAT,CAAgBC,IAAI,IAAI,CAACA,IAAI,CAACC,SAA9B,CAAP;;AACF,SAAKjB,kBAAkB,CAACmB,GAAxB;AACA;AACE,aAAON,QAAP;AAPJ;AASD,CAXM","sourcesContent":["import { VISIBILITY_FILTERS } from \"../constants\";\n\nexport const getTodosState = store => store.todos;\n\nexport const getTodoList = store =>\n  getTodosState(store) ? getTodosState(store).allIds : [];\n\nexport const getTodoById = (store, id) =>\n  getTodosState(store) ? { ...getTodosState(store).byIds[id], id } : {};\n\n/**\n * example of a slightly more complex selector\n * select from store combining information from multiple reducers\n */\nexport const getTodos = store =>\n  getTodoList(store).map(id => getTodoById(store, id));\n\nexport const getTodosByVisibilityFilter = (store, visibilityFilter) => {\n  const allTodos = getTodos(store);\n  switch (visibilityFilter) {\n    case VISIBILITY_FILTERS.COMPLETED:\n      return allTodos.filter(todo => todo.completed);\n    case VISIBILITY_FILTERS.INCOMPLETE:\n      return allTodos.filter(todo => !todo.completed);\n    case VISIBILITY_FILTERS.ALL:\n    default:\n      return allTodos;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}
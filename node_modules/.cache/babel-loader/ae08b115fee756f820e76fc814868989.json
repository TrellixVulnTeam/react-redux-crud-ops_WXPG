{"ast":null,"code":"var _jsxFileName = \"/Users/vineetachauhan/workspace/test/my-app/src/components/CreateAndEditUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport styles from './createuser.module.css'; // import { notification } from \"antd\";\n\nimport { createUser as createUserAction, editUser as editUserAction } from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateAndEditUser = props => {\n  _s();\n\n  const {\n    createUser,\n    location,\n    editUser\n  } = props;\n  const {\n    state = {}\n  } = location;\n  const isEditableMode = userEmail ? true : false;\n  const [email, setEmail] = useState(userEmail);\n  const [name, setName] = useState(userName);\n  const [phone, setPhone] = useState(userPhone);\n\n  const submitformHandler = e => {\n    e.preventDefault();\n    const data = {\n      email,\n      userName,\n      phone\n    };\n\n    if (isEditableMode) {\n      editUser.userEmail = userEmail;\n      editUser(data);\n    } else {\n      createUser(data);\n    } // notification({\n    //   description:\n    //     'user created successfully',\n    // });\n\n\n    alert(\" user created\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      className: styles.formContainer,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.container,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.userContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: styles.label,\n            children: \"UserName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles.inputContainer,\n            type: \"text\",\n            value: userName,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.userContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: styles.label,\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles.inputContainer,\n            type: \"text\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.userContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: styles.label,\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles.inputContainer,\n            type: \"text\",\n            value: phone,\n            onChange: e => setPhone(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.btnContainer,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.button,\n            type: \"submit\",\n            onClick: submitformHandler,\n            children: isEditableMode ? 'Update User' : 'Create User'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateAndEditUser, \"WNdVQ4ohDdnf+ZuDSTdI8wSqFV8=\");\n\n_c = CreateAndEditUser;\n\nconst mapDispatchToProps = dispatch => ({\n  createUser: data => dispatch(createUserAction(data)),\n  editUser: data => dispatch(editUserAction(data))\n});\n\nexport default connect(null, mapDispatchToProps)(CreateAndEditUser);\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAndEditUser\");","map":{"version":3,"sources":["/Users/vineetachauhan/workspace/test/my-app/src/components/CreateAndEditUser.js"],"names":["React","Fragment","useState","connect","styles","createUser","createUserAction","editUser","editUserAction","CreateAndEditUser","props","location","state","isEditableMode","userEmail","email","setEmail","name","setName","userName","phone","setPhone","userPhone","submitformHandler","e","preventDefault","data","alert","formContainer","container","userContainer","label","inputContainer","target","value","btnContainer","button","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport styles from './createuser.module.css';\n// import { notification } from \"antd\";\nimport { createUser as createUserAction, editUser as editUserAction } from '../redux/actions';\n\nconst CreateAndEditUser = (props) => {\n  const { createUser, location, editUser } = props;\n  const { state = {} } = location;\n\n  const isEditableMode = userEmail ? true : false;\n\n  const [email, setEmail] = useState(userEmail);\n  const [name, setName] = useState(userName);\n  const [phone, setPhone] = useState(userPhone);\n\n\n  const submitformHandler = (e) => {\n    e.preventDefault();\n    const data = {\n      email,\n      userName,\n      phone\n    }\n\n    if (isEditableMode) {\n      editUser.userEmail = userEmail;\n      editUser(data);\n    } else {\n      createUser(data);\n    }\n    // notification({\n    //   description:\n    //     'user created successfully',\n    // });\n    alert(\" user created\");\n  }\n\n  return (\n\n    <Fragment>\n      <form action=\"\" className={styles.formContainer}>\n        <div className={styles.container}>\n          <div className={styles.userContainer}>\n            <label className={styles.label}>UserName</label>\n            <input\n              className={styles.inputContainer}\n              type=\"text\"\n              value={userName}\n              onChange={(e) => setName(e.target.value)}\n            />\n          </div>\n\n          <div className={styles.userContainer}>\n            <label className={styles.label}>Email</label>\n            <input\n              className={styles.inputContainer}\n              type=\"text\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n\n          <div className={styles.userContainer}>\n            <label className={styles.label}>Phone</label>\n            <input\n              className={styles.inputContainer}\n              type=\"text\"\n              value={phone}\n              onChange={(e) => setPhone(e.target.value)}\n            />\n          </div>\n\n          <div className={styles.btnContainer}>\n            <button\n              className={styles.button}\n              type=\"submit\" onClick={submitformHandler}\n            >\n              {isEditableMode ? 'Update User' : 'Create User'}\n            </button>\n          </div>\n        </div>\n      </form>\n    </Fragment >\n  )\n}\nconst mapDispatchToProps = (dispatch) => ({\n  createUser: data => dispatch(createUserAction(data)),\n  editUser: data => dispatch(editUserAction(data)),\n})\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(CreateAndEditUser);\n\n"]},"metadata":{},"sourceType":"module"}
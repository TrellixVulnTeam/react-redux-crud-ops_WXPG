{"ast":null,"code":"var _jsxFileName = \"/Users/vineetachauhan/workspace/test/my-app/src/components/CreateAndEditUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport styles from './createuser.module.css';\nimport { notification } from \"antd\";\nimport { createUser as createUserAction, editUser as editUserAction } from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateAndEditUser = props => {\n  _s();\n\n  const {\n    createUser,\n    location,\n    editUser,\n    history\n  } = props;\n  const {\n    state = {}\n  } = location;\n  const {\n    userEmail = '',\n    userName = '',\n    userPhone = ''\n  } = state;\n  const isEditableMode = userEmail ? true : false;\n  const [email, setEmail] = useState(userEmail);\n  const [name, setName] = useState(userName);\n  const [phone, setPhone] = useState(userPhone);\n\n  const validateEmail = email => {\n    const regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return regex.test(email.trim());\n  };\n\n  const validatePhoneNumber = phone => {\n    const regex = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\n    return regex.test(phone);\n  };\n\n  const submitformHandler = e => {\n    e.preventDefault();\n    const isemailValidated = validateEmail(email);\n    const isPhoneNumberIsValidated = validatePhoneNumber(phone);\n    const data = {\n      email,\n      name,\n      phone\n    };\n\n    if (isEditableMode) {\n      data.userEmail = userEmail;\n      editUser(data);\n    } else {\n      createUser(data);\n    }\n\n    notification({\n      description: 'user created successfully'\n    }); // alert(\" user created\");\n\n    setTimeout(() => history.push('/view-user'), 1000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      className: styles.formContainer,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.container,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.userContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: styles.label,\n            children: \"UserName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles.inputContainer,\n            type: \"text\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.userContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: styles.label,\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles.inputContainer,\n            type: \"text\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.userContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: styles.label,\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: styles.inputContainer,\n            type: \"text\",\n            value: phone,\n            onChange: e => setPhone(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.btnContainer,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.button,\n            type: \"submit\",\n            onClick: submitformHandler,\n            children: isEditableMode ? 'Update User' : 'Create User'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CreateAndEditUser, \"WNdVQ4ohDdnf+ZuDSTdI8wSqFV8=\");\n\n_c = CreateAndEditUser;\n\nconst mapDispatchToProps = dispatch => ({\n  createUser: data => dispatch(createUserAction(data)),\n  editUser: data => dispatch(editUserAction(data))\n});\n\nexport default connect(null, mapDispatchToProps)(CreateAndEditUser);\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAndEditUser\");","map":{"version":3,"sources":["/Users/vineetachauhan/workspace/test/my-app/src/components/CreateAndEditUser.js"],"names":["React","Fragment","useState","connect","styles","notification","createUser","createUserAction","editUser","editUserAction","CreateAndEditUser","props","location","history","state","userEmail","userName","userPhone","isEditableMode","email","setEmail","name","setName","phone","setPhone","validateEmail","regex","test","trim","validatePhoneNumber","submitformHandler","e","preventDefault","isemailValidated","isPhoneNumberIsValidated","data","description","setTimeout","push","formContainer","container","userContainer","label","inputContainer","target","value","btnContainer","button","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport styles from './createuser.module.css';\nimport { notification } from \"antd\";\nimport { createUser as createUserAction, editUser as editUserAction } from '../redux/actions';\n\nconst CreateAndEditUser = (props) => {\n  const { createUser, location, editUser, history } = props;\n  const { state = {} } = location;\n  const { userEmail = '', userName = '', userPhone = '' } = state;\n\n  const isEditableMode = userEmail ? true : false;\n\n  const [email, setEmail] = useState(userEmail);\n  const [name, setName] = useState(userName);\n  const [phone, setPhone] = useState(userPhone);\n\n  const validateEmail = (email) => {\n    const regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return regex.test(email.trim());\n  };\n\n  const validatePhoneNumber = (phone) => {\n    const regex = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\n    return regex.test(phone);\n  }\n  const submitformHandler = (e) => {\n    e.preventDefault();\n    const isemailValidated = validateEmail(email);\n    const isPhoneNumberIsValidated = validatePhoneNumber(phone);\n    const data = {\n      email,\n      name,\n      phone\n    }\n\n    if (isEditableMode) {\n      data.userEmail = userEmail;\n      editUser(data);\n    } else {\n      createUser(data);\n    }\n    notification({\n      description:\n        'user created successfully',\n    });\n    // alert(\" user created\");\n    setTimeout(() => history.push('/view-user'), 1000);\n  }\n\n  return (\n\n    <Fragment>\n      <form action=\"\" className={styles.formContainer}>\n        <div className={styles.container}>\n          <div className={styles.userContainer}>\n            <label className={styles.label}>UserName</label>\n            <input\n              className={styles.inputContainer}\n              type=\"text\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n          </div>\n\n          <div className={styles.userContainer}>\n            <label className={styles.label}>Email</label>\n            <input\n              className={styles.inputContainer}\n              type=\"text\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n\n          <div className={styles.userContainer}>\n            <label className={styles.label}>Phone</label>\n            <input\n              className={styles.inputContainer}\n              type=\"text\"\n              value={phone}\n              onChange={(e) => setPhone(e.target.value)}\n            />\n          </div>\n\n          <div className={styles.btnContainer}>\n            <button\n              className={styles.button}\n              type=\"submit\" onClick={submitformHandler}\n            >\n              {isEditableMode ? 'Update User' : 'Create User'}\n            </button>\n          </div>\n        </div>\n      </form>\n    </Fragment >\n  )\n}\nconst mapDispatchToProps = (dispatch) => ({\n  createUser: data => dispatch(createUserAction(data)),\n  editUser: data => dispatch(editUserAction(data)),\n})\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(CreateAndEditUser);\n\n"]},"metadata":{},"sourceType":"module"}